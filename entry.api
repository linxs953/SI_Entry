syntax = "v1"

type FetchResourceRequest {
	ResourceType string `json:"resource_type"`
	ResourceName string `json:"name"`
	Namespace    string `json:"namespace,optional"`
}

type FetchResourceResponse {
	Code    int                    `json:"code"`
	Message string                 `json:"message"`
	Data    map[string]interface{} `json:"data"`
}

type FetchAllResourcesRequest {
	ResourceType string `json:"resource_type"`
	Namespace    string `json:"namespace,optional"`
}

type FetchAllResourcesResponse {
	Code    int                      `json:"code"`
	Message string                   `json:"message"`
	Data    []map[string]interface{} `json:"data"`
}

type DispatchResourceRequest {
	ResourceType string                 `json:"type"`
	Event        string                 `json:"event"`
	Spec         map[string]interface{} `json:"spec"`
	Metadata     map[string]interface{} `json:"metadata"`
}

type DispatchResourceResponse {
	Code    int    `json:"code"`
	Message string `json:"message"`
}

service entry-api {

	@handler fetchResource
	get /resource/fetch(FetchResourceRequest) returns (FetchResourceResponse)

	@handler fetchResources
	get /resource/fetchAll(FetchAllResourcesRequest) returns (FetchAllResourcesResponse)

	@handler dispatch
	post /resource/dispatch(DispatchResourceRequest) returns (DispatchResourceResponse)
}